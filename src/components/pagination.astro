---
const { section, currentPage, totalPages } = Astro.props;

const indexPageLink = currentPage === 2;
const hasPrevPage = currentPage > 1;
const hasNextPage = totalPages > currentPage;

let pageList = [];
for (let i = 1; i <= totalPages; i++) {
  pageList.push(i);
}
---
<div class="mt-10">
  {
    totalPages > 1 && (
      <nav class="mb-4 flex justify-center space-x-2 text-center" aria-label="Pagination">
        {/* previous */}
        {hasPrevPage ? (
          <a
            href={
              indexPageLink
                ? `${section ? "/" + section : "/"}`
                : `${section ? "/" + section : ""}/${currentPage - 1}`
            }
            class="border border-primary hover:bg-primary hover:text-amber-500 rounded-md h-10 w-10 leading-[36px]  text-dark flex items-center justify-center transition duration-200"
          >
            <i class="fa-solid fa-angle-left text-base"></i>
          </a>
        ) : (
          <span class="border border-gray-400 opacity-40 rounded-md h-10 w-10  text-dark flex items-center justify-center pointer-events-none">
            <i class="fa-solid fa-angle-left text-base"></i>
          </span>
        )}
  
        {/* page index */}
        {pageList.map((pagination, i) =>
          pagination === currentPage ? (
            <span
              aria-current="page"
              class='border border-primary bg-primary rounded-md h-10 w-10  text-amber-500 flex items-center justify-center '
            > 
              {pagination}
            </span>
          ) : (
            <a
              href={
                i === 0
                  ? `${section ? "/" + section : "/"}`
                  : `${section ? "/" + section : ""}/${pagination}`
              }
              aria-current="page"
              class='border border-primary hover:bg-primary hover:text-amber-500 rounded-md h-10 w-10 text-dark flex items-center justify-center transition duration-200'
            >
              {pagination}
            </a>
          )
        )}
  
        {/* next page */}
        {hasNextPage ? (
          <a
            href={`${section ? "/" + section : ""}/${currentPage + 1}`}
            class="border border-primary hover:bg-primary hover:text-amber-500 rounded-md h-10 w-10  text-dark flex items-center justify-center transition duration-200"
          >
           <i class="fa-solid fa-angle-right text-base"></i>
          </a>
        ) : (
          <span class="border border-gray-400 opacity-40 rounded-md h-10 w-10 text-dark flex items-center justify-center pointer-events-none">
            <i class="fa-solid fa-angle-right text-base"></i>
          </span>
        )}
      </nav>
    )
  }
</div>
